<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet id="4_sec_user_role" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createTable tableName="sec_user_role" schemaName="public">
            <column autoIncrement="true" name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="role_name" type="VARCHAR"/>
            <column name="username" type="VARCHAR"/>
            <column name="note" type="VARCHAR"/>
            <column name="aud_when_create" type="TIMESTAMP"/>
            <column name="aud_when_update" type="TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="4_sec_user" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createTable tableName="sec_user" schemaName="public">
            <column autoIncrement="true" name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="note" type="VARCHAR">
            </column>
            <column name="username" type="VARCHAR">
                <constraints nullable="false"/>
            </column>
            <column name="password" type="VARCHAR">
                <constraints nullable="false"/>
            </column>
            <column name="role_id" type="INTEGER">
                <constraints nullable="false" foreignKeyName="fk_sec_user_key" referencedTableName="sec_user_role"
                             referencedColumnNames="id"/>
            </column>
            <column name="is_blocked" type="BOOLEAN" defaultValueBoolean="false"/>
            <column name="is_enabled" type="BOOLEAN" defaultValueBoolean="true"/>
            <column name="last_login" type="TIMESTAMP"/>
            <column name="aud_when_create" type="TIMESTAMP"/>
            <column name="aud_when_update" type="TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="1_oauth_client_details" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createTable tableName="oauth_client_details" schemaName="public">
            <column name="client_id" type="VARCHAR(256)">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="resource_ids" type="VARCHAR(256)"/>
            <column name="client_secret" type="VARCHAR(256)"/>
            <column name="scope" type="VARCHAR(256)"/>
            <column name="authorized_grant_types" type="VARCHAR(256)"/>
            <column name="web_server_redirect_uri" type="VARCHAR(256)"/>
            <column name="authorities" type="VARCHAR(256)"/>
            <column name="access_token_validity" type="INTEGER"/>
            <column name="refresh_token_validity" type="INTEGER"/>
            <column name="additional_information" type="VARCHAR(4096)"/>
            <column name="autoapprove" type="VARCHAR(256)"/>
            <column name="aud_when_create" type="TIMESTAMP"/>
            <column name="aud_when_update" type="TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="1_oauth_access_token" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createTable tableName="oauth_access_token" schemaName="public">
            <column name="token_id" type="VARCHAR(255)"/>
            <column name="token" type="bytea"/>
            <column name="authentication_id" type="VARCHAR(255)"/>
            <column name="user_name" type="VARCHAR(255)"/>
            <column name="client_id" type="VARCHAR(255)"/>
            <column name="authentication" type="bytea"/>
            <column name="refresh_token" type="VARCHAR(255)"/>
            <column name="aud_when_create" type="TIMESTAMP"/>
            <column name="aud_when_update" type="TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="3_users" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createTable tableName="users" schemaName="public">
            <column autoIncrement="true" name="id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="name" type="VARCHAR(255)"/>
            <column name="email" type="VARCHAR(255)"/>
            <column name="email_verified" type="boolean"/>
            <column name="image_url" type="VARCHAR(255)"/>
            <column name="password" type="VARCHAR(255)"/>
            <column name="provider" type="VARCHAR"/>
            <column name="provider_id" type="integer"/>
            <column name="aud_when_create" type="TIMESTAMP"/>
            <column name="aud_when_update" type="TIMESTAMP"/>
        </createTable>
    </changeSet>

    <changeSet id="1_4_aud_trigger_function" author="azat.akhunov@protonmail.com" runOnChange="true">
        <createProcedure>
            CREATE OR REPLACE FUNCTION aud_trigger()
            RETURNS trigger AS
            $BODY$
            begin
            if (TG_OP = 'INSERT') then
            NEW.aud_when_create = now();
            NEW.aud_when_update = now();
            end if;
            if (TG_OP = 'UPDATE') then
            NEW.aud_when_update = now();
            end if;
            return new;
            end;
            $BODY$
            LANGUAGE plpgsql VOLATILE
        </createProcedure>
    </changeSet>

    <changeSet id="1_4_sec_user" failOnError="true" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DROP TRIGGER IF EXISTS sec_user_aud_trigger ON sec_user;
            CREATE TRIGGER sec_user_aud_trigger BEFORE INSERT OR UPDATE ON sec_user FOR EACH ROW EXECUTE PROCEDURE
            aud_trigger();
        </sql>
        <rollback>
            DROP TRIGGER sec_user_aud_trigger ON sec_user;
        </rollback>
    </changeSet>

    <changeSet id="1_4_sec_user_role" failOnError="true" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DROP TRIGGER IF EXISTS sec_user_role_aud_trigger ON sec_user_role;
            CREATE TRIGGER sec_user_role_aud_trigger BEFORE INSERT OR UPDATE ON sec_user_role FOR EACH ROW EXECUTE PROCEDURE
            aud_trigger();
        </sql>
        <rollback>
            DROP TRIGGER sec_user_role_aud_trigger ON sec_user_role;
        </rollback>
    </changeSet>

    <changeSet id="1_1_oauth_client_details" failOnError="true" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DROP TRIGGER IF EXISTS oauth_client_details_aud_trigger ON oauth_client_details;
            CREATE TRIGGER oauth_client_details_aud_trigger BEFORE INSERT OR UPDATE ON oauth_client_details FOR EACH ROW EXECUTE PROCEDURE
            aud_trigger();
        </sql>
        <rollback>
            DROP TRIGGER oauth_client_details_aud_trigger ON oauth_client_details;
        </rollback>
    </changeSet>

    <changeSet id="1_1_oauth_access_token" failOnError="true" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DROP TRIGGER IF EXISTS oauth_access_token_aud_trigger ON oauth_access_token;
            CREATE TRIGGER oauth_access_token_aud_trigger BEFORE INSERT OR UPDATE ON oauth_access_token FOR EACH ROW EXECUTE PROCEDURE
            aud_trigger();
        </sql>
        <rollback>
            DROP TRIGGER oauth_access_token_aud_trigger ON oauth_access_token;
        </rollback>
    </changeSet>

    <changeSet id="1_1_users" failOnError="true" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DROP TRIGGER IF EXISTS users_aud_trigger ON users;
            CREATE TRIGGER users_aud_trigger BEFORE INSERT OR UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE
            aud_trigger();
        </sql>
        <rollback>
            DROP TRIGGER users_aud_trigger ON users;
        </rollback>
    </changeSet>

    <changeSet id="5_sec_user_role_data" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            DELETE FROM sec_user_role WHERE note = 'liquibase_changeset_sec_user_role_data';
            INSERT INTO sec_user_role(id, role_name, note, username) values(nextval('sec_user_role_id_seq'), 'ADMIN', 'liquibase_changeset_sec_user_role_data', 'admin@botmasterzzz.com');
            INSERT INTO sec_user_role(id, role_name, note, username) values(nextval('sec_user_role_id_seq'), 'EXTERNAL_ADMIN', 'liquibase_changeset_sec_user_role_data', 'exadmin@botmasterzzz.com');
            INSERT INTO sec_user_role(id, role_name, note, username) values(nextval('sec_user_role_id_seq'), 'EXTERNAL_MANAGER', 'liquibase_changeset_sec_user_role_data', 'exmanager@botmasterzzz.com');
            INSERT INTO sec_user_role(id, role_name, note, username) values(nextval('sec_user_role_id_seq'), 'USER', 'liquibase_changeset_sec_user_role_data', 'user@botmasterzzz.com');
            INSERT INTO sec_user(id, note, username, password, role_id, is_blocked, is_enabled) values(nextval('sec_user_id_seq'), 'iPhone TECHNOLOGY APPLE Gallery ZIGZAG Washington Gallery Jack Drip YOU Drip Xbox Egg DRIP XBOX NUT', 'admin@botmasterzzz.com', 'iTAgZwgjdYdxeDXN', (select id from sec_user_role where username = 'admin@botmasterzzz.com'), false, true);
            INSERT INTO sec_user(id, note, username, password, role_id, is_blocked, is_enabled) values(nextval('sec_user_id_seq'), 'EGG GALLERY SHOOT Zigzag ZIGZAG MUSIC SHOOT Xbox Fruit IPHONE APPLE BANANA Shoot Laptop Shoot Fruit', 'exadmin@botmasterzzz.com', 'EGSzZMSxfIABslsf', (select id from sec_user_role where username = 'exadmin@botmasterzzz.com'), false, true);
            INSERT INTO sec_user(id, note, username, password, role_id, is_blocked, is_enabled) values(nextval('sec_user_id_seq'), 'Zigzag Washington VISA Occupation OCCUPATION MUSIC LAPTOP Hero ZIGZAG Occupation Apple VISA EGG Zigzag Laptop Drip', 'exmanager@botmasterzzz.com', 'zwVoOMLhZoaVEzld', (select id from sec_user_role where username = 'exmanager'@botmasterzzz.com), false, true);
            INSERT INTO sec_user(id, note, username, password, role_id, is_blocked, is_enabled) values(nextval('sec_user_id_seq'), 'JACK iPhone Apple GALLERY Occupation Rope iPhone APPLE UMBRELLA APPLE Umbrella LAPTOP ZIGZAG Egg Xbox ZIGZAG', 'user@botmasterzzz.com', 'JiaGoriAUAuLZexZ', (select id from sec_user_role where username = 'user@botmasterzzz.com'), false, true);
        </sql>
    </changeSet>

    <changeSet id="4_oauth_client_details_data" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            delete from oauth_client_details;
            INSERT INTO oauth_client_details(client_id, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove) VALUES ('web_application', '123456', 'write','authorization_code, refresh_token', 'https://botmasterzzz.com/', null, 36000, 36000, null, 'true');
            INSERT INTO oauth_client_details(client_id, client_secret, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove) VALUES ('secret_application', 'secret_secret', 'write','authorization_code, refresh_token', 'https://botmasterzzz.com/', null, 0, 0, null, 'true');
        </sql>
    </changeSet>

    <changeSet id="2_oauth_access_token_data" failOnError="false" author="azat.akhunov@protonmail.com" runOnChange="true">
        <sql>
            delete from oauth_access_token;
            insert into oauth_access_token(token_id, token, authentication_id, user_name, client_id, authentication, refresh_token) values ('49c3a9bea88f8591f8d24523b2348c56', E'\\xdaa25dd283b3d19aea29cbd6d071f', 'admin@botmasterzzz.com', 'secret_application', E'\\xnull);
        </sql>
    </changeSet>

</databaseChangeLog>